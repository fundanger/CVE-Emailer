from datetime import datetime
import time
import requests
from email.mime.text import MIMEText
import mail
import database
import fileIO
import json
import configparser

config = configparser.ConfigParser()
config.read("config.ini")
            
def getSearchResult(API_URL): # Contacts the API through the given URL and returns the json response
    headers = {
        'apiKey': config['DEFAULT']['apiKey'],
    }
    resp = requests.get(API_URL, headers=headers)  # Gets the response
    #print(resp.json())  # UNCOMMENT TO PRINT RAW JSON FILE
    return resp.json()

def getResultCount(jsonFile):  # Gets the number of results from the given search
    resultCount = jsonFile['totalResults']
    # print("There are " + resultNum + " results.")
    return resultCount

def getIdNums(resultCount, jsonFile):  # prints out cve ID, publish date, last modified date, and description of the CVE from the search results
    emailLines = []
    for i in range(resultCount):
        emailLines.append(jsonFile['vulnerabilities'][i]['cve']['id'])
        # print(jsonFile['vulnerabilities'][i]['cve']['id'])
        emailLines.append("Creation Date: " + jsonFile['vulnerabilities'][i]['cve']['published'])
        # print("Creation Date: " + jsonFile['vulnerabilities'][i]['cve']['published'])
        emailLines.append("Last Modified: " + jsonFile['vulnerabilities'][i]['cve']['lastModified'])
        # print("Last Modified: " + jsonFile['vulnerabilities'][i]['cve']['lastModified'])
        emailLines.append(jsonFile['vulnerabilities'][i]['cve']['descriptions'][0]['value'])
        # print(jsonFile['vulnerabilities'][i]['cve']['descriptions'][0]['value'])
        emailLines.append('\n')
    return emailLines


def createEntry(jsonFile, resultCount):
    for i in range(resultCount):
        cve_id = jsonFile['vulnerabilities'][i]['cve']['id']
        publish_date = jsonFile['vulnerabilities'][i]['cve']['published']
        last_modified = jsonFile['vulnerabilities'][i]['cve']['lastModified']
        description = jsonFile['vulnerabilities'][i]['cve']['descriptions'][0]['value']
    return
    
def formatJson(jsonFile):  # Formats the given JSON file to a readable console output
    formattedJson = (json.dumps(jsonFile, sort_keys=True, indent=4))  # Pretty Print JSON file
    return formattedJson

def singleSearch(URL):
    jsonFile = getSearchResult(URL)
    resultCount = getResultCount(jsonFile)

    message = getIdNums(resultCount, jsonFile)
    messageFormatted = MIMEText('\n'.join(message))
    print(messageFormatted) # UNCOMMENT TO PRINT THE FORMATTED EMAIL MESSAGE
    return messageFormatted.as_string()

def timedSearch(URL):
    startTime = int(datetime.now().timestamp())
    counter = 0
    print(startTime)
    while (True):
        if (int(datetime.now().timestamp() - startTime) >= int(config['DEFAULT']['checkFrequency'])):
            jsonFile = getSearchResult(URL)
            resultCount = getResultCount(jsonFile)
            message = getIdNums(resultCount, jsonFile)
            messageFormatted = MIMEText('\n'.join(message))
            print(messageFormatted) # UNCOMMENT TO PRINT THE FORMATTED EMAIL MESSAGE
            startTime = int(datetime.now().timestamp())