# Script that searches the NIST National Vulnerability Database for the given Vendors/Services
# and returns new CVEs for those services(if any) in the format of an email every X amount of hours
# This product uses the NVD API but is not endorsed or certified by the NVD
import configparser
from email.mime.text import MIMEText
import fileIO
import search
#import mysql.connector
from datetime import datetime

config = configparser.ConfigParser()
config.read('config.ini')

# cve_URL does not currently work when searching for CVEs through vendor/product search
# cve_URL = 'https://cve.circl.lu/api/search/apache/groovy'
# Working with NIST URL now
vendor = 'Apache'
service = 'HTTPClient'
URL = 'https://services.nvd.nist.gov/rest/json/cves/2.0?keywordSearch=' + vendor + ' ' + service + '&keywordExactMatch'  # Keyword search
URL2 = 'https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName='  # CPE search

def startUp():
    print('Starting program')
    print(config.getboolean('DEFAULT', 'isCPE'))
    print(config.getboolean('DEFAULT', 'isKeywordSearch'))
    try:
        if bool(config.getboolean('DEFAULT', 'isCPE')) == True and bool(config.getboolean('DEFAULT', 'isKeywordSearch')) == False:
                
            fileIO.readFile(config['DEFAULT']['txtList'])
            #Filler
            print("CPE Search Working! Exiting")
            exit(0)
        
        elif bool(config.getboolean('DEFAULT', 'isCPE')) == False and bool(config.getboolean('DEFAULT', 'isKeywordSearch')) == True:
            fileIO.readFile(config['DEFAULT']['txtList'])
            
            #timedSearch(config['DEFAULT']['apiURL'])
            print("Keyword Search working! Exiting")
            exit(0)
        else:
            print("Something is very wrong! Exiting")
            exit(0)    
            
    except KeyboardInterrupt:
        exit(0)
        
def main():
    currentTime = datetime.datetime.now()
    print(currentTime)
    #email = mail.createEmail(config['EMAIL']['senderEmail'], config['EMAIL']['recipientEmail'], config['EMAIL']['subjectLine'], # UNCOMMENT TO CREATE EMAIL
    #                      singleSearch(config['DEFAULT']['apiURL']))
    #mail.sendEmail(config['EMAIL']['senderEmail'], config['EMAIL']['senderPassword'], email) # UNCOMMENT TO SEND EMAIL


if __name__ == "__main__":
    startUp()