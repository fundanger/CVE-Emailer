# Script that searches the NIST National Vulnerability Database for the given Vendors/Services
# and returns new CVEs for those services(if any) in the format of an email every X amount of hours
# This product uses the NVD API but is not endorsed or certified by the NVD
import configparser

import requests
import json
import time
import mail
import mysql.connector

from configparser import ConfigParser

cfg = configparser.ConfigParser()
cfg.read("config.ini")

# cve_URL does not currently work when searching for CVEs through vendor/product search
# cve_URL = 'https://cve.circl.lu/api/search/apache/groovy'
# Working with NIST URL now
vendor = 'Apache'
service = 'HTTPClient'
URL = 'https://services.nvd.nist.gov/rest/json/cves/2.0?keywordsSearch=' + vendor + ' ' + service + '&keywordExactMatch'  # Keyword search
URL2 = 'https://services.nvd.nist.gov/rest/json/cves/2.0?cpeName='  # CPE search


def getSearchResult(API_URL):
    resp = requests.get(API_URL)  # Gets the response
    # print(resp.json())
    return resp.json()


def getIdNums(resultCount, jsonFile):  # prints out each CVE related to the search result
    for i in range(resultCount):
        print(jsonFile['vulnerabilities'][i]['cve']['id'])
        print("Creation Date: " + jsonFile['vulnerabilities'][i]['cve']['published'])
        print("Last Modified: " + jsonFile['vulnerabilities'][i]['cve']['lastModified'])
        print(jsonFile['vulnerabilities'][i]['cve']['descriptions'][0]['value'])


def getTotalResults(jsonFile):  # Gets the number of results from the given search
    resultNum = jsonFile['totalResults']
    # print("There are " + resultNum + " results.")
    return resultNum


def formatJson(jsonFile):  # Formats the given JSON file to a readable console output
    formattedJson = (json.dumps(jsonFile, sort_keys=True, indent=4))  # Pretty Print JSON file
    return formattedJson


def singleSearch(URL):
    jsonFile = getSearchResult(URL)
    resultCount = getTotalResults(jsonFile)
    getIdNums(resultCount, jsonFile)


def main():
    t = time.localtime()
    current_time = time.strftime("%H:%M:%S", t)
    print("The current time is: " + current_time)
    singleSearch(cfg['DEFAULT']['apiURL'])
    # jsonFile = getSearchResult(cfg['DEFAULT']['apiURL'])
    # vulnCount = getTotalResults(jsonFile)
    # getIdNums(vulnCount, jsonFile)
    email = mail.createEmail(cfg['EMAIL']['senderEmail'],cfg['EMAIL']['recipientEmail'], cfg['EMAIL']['subjectLine'],singleSearch(cfg['DEFAULT']['apiURL']))
    mail.sendEmail(cfg['EMAIL']['senderEmail'], cfg['EMAIL']['senderPassword'], email)


if __name__ == "__main__":
    main()

# print(jsonfile['vulnerabilities'][1])

# print(jsonfile['totalResults'])
# print(resp.json()) #print full JSON file
